name: Update IP Databases

on:
  schedule:
    - cron: '0 0 * * *'  # 每天零点运行
  workflow_dispatch:      # 允许手动触发

permissions:
  contents: write      # 添加写入权限用于创建 release
  packages: write     # 添加写入权限用于推送 Docker 镜像

jobs:
  update-databases:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'
          
      - name: Install dependencies
        run: |
          yarn install --frozen-lockfile
        continue-on-error: false
          
      - name: Update databases
        env:
          IP2LOCATION_TOKEN: ${{ secrets.IP2LOCATION_TOKEN }}
          IPINFO_TOKEN: ${{ secrets.IPINFO_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # 创建数据目录
          mkdir -p data/db
          mkdir -p public/db
          
          # 运行更新脚本
          yarn update-db
          
          # 确保所有文件都被复制到 public 目录
          rm -rf public/db/*  # 清空目标目录
          cp -f data/db/*.mmdb public/db/ || true
          cp -f data/db/*.BIN public/db/ || true
          cp -f data/db/*.ipdb public/db/ || true
          cp -f data/db/*.csv public/db/ || true
          
          # 列出下载的文件
          echo "数据目录文件列表："
          ls -la data/db/
          echo "公共目录文件列表："
          ls -la public/db/
        continue-on-error: false

      - name: Set version
        id: version
        run: |
          echo "VERSION=$(date +'%Y.%m.%d')-${{ github.run_number }}" >> $GITHUB_OUTPUT
          echo "DATE=$(date +'%Y.%m.%d')" >> $GITHUB_OUTPUT
          
      - name: Commit and push if there are changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          # 确保添加所有数据库文件
          git add public/db/*.mmdb || true
          git add public/db/*.BIN || true
          git add public/db/*.ipdb || true
          git add public/db/*.csv || true
          git status
          git commit -m "Update IP databases (v${{ steps.version.outputs.VERSION }})" || echo "No changes to commit"
          git push origin main || echo "No changes to push"
          
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        if: success()
        with:
          tag_name: ip-db-${{ steps.version.outputs.VERSION }}
          name: IP Database Update ${{ steps.version.outputs.VERSION }}
          body: |
            🎉 自动更新 IP 数据库 🎉
            ---------------------------------------------
            • 更新时间：${{ github.event.schedule }}
            • 版本：${{ steps.version.outputs.VERSION }}

            感谢使用本项目，更多信息请参阅仓库说明。
          files: |
            data/db/*.mmdb
            data/db/*.BIN
            data/db/*.ipdb
            data/db/*.csv
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # 构建 Docker 镜像
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        if: success()

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        if: success()
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        if: success()
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/leveling.zone:latest
            ghcr.io/${{ github.repository_owner }}/leveling.zone:${{ steps.version.outputs.VERSION }}
            ghcr.io/${{ github.repository_owner }}/leveling.zone:${{ steps.version.outputs.DATE }}
          labels: |
            org.opencontainers.image.source=https://github.com/${{ github.repository }}
            org.opencontainers.image.created=${{ github.event.repository.updated_at }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.version=${{ steps.version.outputs.VERSION }}
            org.opencontainers.image.title=IP Database Service
            org.opencontainers.image.description=IP Geolocation and ASN Database Service
            org.opencontainers.image.licenses=MIT
