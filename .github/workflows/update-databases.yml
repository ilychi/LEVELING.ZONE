name: Update IP Databases

on:
  schedule:
    - cron: '0 0 * * *'  # 每天零点运行
  workflow_dispatch:      # 允许手动触发

permissions:
  contents: write      # 添加写入权限用于创建 release

jobs:
  update-databases:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: Install dependencies
        run: |
          npm install
          npm ls
        continue-on-error: false
          
      - name: Update databases
        env:
          IP2LOCATION_TOKEN: ${{ secrets.IP2LOCATION_TOKEN }}
          IPINFO_TOKEN: ${{ secrets.IPINFO_TOKEN }}
        run: |
          # 创建数据目录
          mkdir -p data/db
          mkdir -p public/db
          
          # 运行更新脚本
          npm run update-db
          
          # 复制数据库文件到 public 目录（用于 Vercel 部署）
          cp data/db/* public/db/
          
          # 列出下载的文件
          echo "数据目录文件列表："
          ls -la data/db/
          echo "公共目录文件列表："
          ls -la public/db/
        continue-on-error: false

      - name: Commit and push if there are changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add public/db/
          git commit -m "Update IP databases" || echo "No changes to commit"
          git push origin main || echo "No changes to push"
          
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        if: success()
        with:
          tag_name: ip-db-${{ github.run_number }}
          name: IP Database Update ${{ github.run_number }}
          body: |
            自动更新IP数据库
            更新时间：${{ github.event.schedule }}
            
            更新内容：
            - IP2Location 数据库
            - MaxMind GeoLite2 数据库
            - DB-IP 数据库
            - IPinfo 数据库
            - 纯真 IP 数据库
            - ASN 信息数据库
          files: |
            data/db/*.mmdb
            data/db/*.BIN
            data/db/*.ipdb
            data/db/*.csv
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # 构建 Docker 镜像
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        if: success()

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        if: success()
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        if: success()
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:latest
            ghcr.io/${{ github.repository }}:${{ github.run_number }}
          labels: |
            org.opencontainers.image.source=https://github.com/${{ github.repository }}
            org.opencontainers.image.created=${{ github.event.repository.updated_at }}
            org.opencontainers.image.revision=${{ github.sha }}
